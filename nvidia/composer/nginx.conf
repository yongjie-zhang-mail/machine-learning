## This file belongs ABOVE the notebooks directory

# Set number of worker processes to be automatically determined based on the number of available CPU cores.
worker_processes auto;

# Set location of PID file for the Nginx master process.
pid /etc/nginx/.nginx.pid;

events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 768;
}

http {
    # Enables the use of sendfile() system call for sending files, which can improve performance.
    # Enables TCP_NOPUSH socket option, which can improve performance for some workloads.
    # Enables TCP_NODELAY socket option, which can reduce latency for some workloads.
    # Sets the maximum allowed size of the client request body. Setting it to 0 means unlimited size.
    # Sets the timeout for keeping connections alive.
    # Sets the maximum size of the types hash table.
    # Sets the default MIME type for files.
    # Specifies the SSL/TLS protocols to be used. SSLv3 is disabled due to security vulnerabilities.
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    client_max_body_size 0;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    default_type application/octet-stream;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    # Specifies the location of the access and error log file.
    access_log /var/log/access.log;
    error_log /var/log/error.log;

    # Enables gzip compression for responses (except for Internet Explorer 6).
    gzip on;
    gzip_disable "msie6";

    # Defines an upstream block for load balancing. 
	# The ip_hash directive ensures that requests from the same client are always sent to the same server.
    upstream gradio-app {
        ip_hash;
        server frontend_rproxy:8091;
    }

    # Defines another upstream block for load balancing.
    upstream gradio-pass {
        ip_hash;
        server lab:7860; 
    }

    server {
        # Listens for incoming connections on port 80 (HTTP) and sets this server block as the default server.
        listen 80 default_server;
        listen [::]:80 default_server;

        # Defines a location block for the root URL path.
        location / {
            proxy_pass http://localhost/lab;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffering off;
        }

        # Defines a location block for the /lab URL path.
        location /lab {
            proxy_pass http://lab:8888;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffering off;
        }

        # Defines a location block for the /8090/ URL path, which proxies requests to the gradio-app upstream.
        location /8090/ {
            proxy_pass http://gradio-app/;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_set_header Upgrade $http_upgrade;
        }

        # Defines a location block for the /7860/ URL path, which proxies requests to the gradio-pass upstream.
        location /7860/ {
            proxy_pass http://gradio-pass/;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_set_header Upgrade $http_upgrade;
        }
    }
}